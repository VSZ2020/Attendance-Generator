<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <GridLength x:Key="MenuBarHeight">25</GridLength>
    <GridLength x:Key="UserMenuBarHeight">23</GridLength>
    <GridLength x:Key="ToolbarHeight">40</GridLength>
    <Brush x:Key="AdministratorButtonColor">Blue</Brush>
    <BooleanToVisibilityConverter x:Key="infoMsgVisibilityConverter"/>

    <system:Double x:Key="DefaultFontSize">16</system:Double>
    <!-- Forms Header style -->
    <Style x:Key="FormsHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,20,0,20"/>
    </Style>
    
    <!-- Form TextBlock style -->
    <Style x:Key="TextBlock_1" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBlock_Errors" TargetType="TextBlock">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,5,0,10"/>
    </Style>
    
    <!-- TextBox style -->
    <Thickness x:Key="TextBoxMargins">0,5,0,10</Thickness>
    <Style x:Key="TextBoxDefaultStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    

    <!-- Password Box style -->
    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <!-- Combobox style -->
    <Style x:Key="ComboboxStyle_1" TargetType="ComboBox">
        <Setter Property="FontSize" Value="{StaticResource DefaultFontSize}"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    
    <!-- Стиль для большой кнопки -->
    <system:Double x:Key="btnMiniFontSize">12</system:Double>
    <system:Double x:Key="btnStandartFontSize">18</system:Double>
    <system:Double x:Key="btnBigFontSize">24</system:Double>
    <SolidColorBrush  x:Key="btnBackgroundColor">#FF0E6DC2</SolidColorBrush>
    <SolidColorBrush x:Key="btnBackgroundColor_Pressed">#FF0E6DC2</SolidColorBrush>
    <SolidColorBrush x:Key="btnBorderColor">#FF065398</SolidColorBrush>
    <Style
        x:Key="RoundedBigButton"
        TargetType="Button">
        <Setter Property="Margin" Value="0,10,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btnGrid">
                        <Border 
                            x:Name="btnBorder"
                            CornerRadius="10"
                            Background="{StaticResource btnBackgroundColor}"
                            BorderBrush="{StaticResource btnBorderColor}" 
                            BorderThickness="2">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                TextElement.FontSize="{StaticResource btnBigFontSize}"
                                TextElement.FontWeight="Bold"
                                TextElement.Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource btnBackgroundColor_Pressed}" TargetName="btnBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkBlue" TargetName="btnBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="btnGrid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="MiniButton"
        TargetType="Button">
        <Setter Property="Margin" Value="0,3,0,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btnGrid">
                        <Border 
                            x:Name="btnBorder"
                            CornerRadius="5"
                            Background="{StaticResource btnBackgroundColor}"
                            BorderBrush="{StaticResource btnBorderColor}" 
                            BorderThickness="1" 
                            Padding="3,0,3,0">
                            <ContentPresenter 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center"
                                TextElement.FontSize="{StaticResource btnMiniFontSize}"
                                TextElement.FontWeight="Bold"
                                TextElement.Foreground="White"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource btnBackgroundColor_Pressed}" TargetName="btnBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="DarkBlue" TargetName="btnBorder"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="btnGrid" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Optional button styles -->
    <SolidColorBrush x:Key="btnUnderTextBoxColor">#FF065398</SolidColorBrush>
    <Style x:Key="ButtonUnderTextBox" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="btnGrid2">
                        <ContentPresenter
                            x:Name="textPresenter"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            TextElement.FontSize="{StaticResource btnMiniFontSize}"
                            TextElement.Foreground="{StaticResource btnUnderTextBoxColor}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="TextElement.Foreground" Value="DarkViolet" TargetName="textPresenter"/>
                            <Setter Property="TextElement.FontWeight" Value="Bold" TargetName="textPresenter"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="TextElement.Foreground" Value="Red" TargetName="textPresenter"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Стиль Grid для Border окон-->
    <Style x:Key="WndBorderedGridStyle" TargetType="Grid">
        <Setter Property="Background" Value="LightGray"/>
    </Style>
    
    <!-- Стиль Border окон -->
    <Style x:Key="WndBorderStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="50"/>
    </Style>
    
    <!-- Стиль контейнера полей ввода для Bordered Window -->
    <Style x:Key="StackPanelStyle" TargetType="StackPanel">
        <Setter Property="Margin" Value="30,20,30,20"/>
    </Style>
</ResourceDictionary>